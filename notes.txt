Left off at Global Variables 8.2


    Grammar Notation    |   Code Representation
------------------------|---------------------------
    Terminal            |   Code to match nad consume a token
    Non-terminal        |   Call to the rule's function
    |                   |   if or switch statement
    * or +              |   while or for loop
    ?                   |   if statement


program        → statement* EOF ;

declaration    → varDecl | statement;

varDecl        → "var" IDENTIFIER ("=" expression)? ";" ;

statement      → exprStmt | forStmt | ifStmt | printStmt | whileStmt |
                 block ;

forStmt        → "for" "(" (varDecl | exprStmt | ";")
                 expression? ";"
                 expression? ")" statement ;
ifStmt         → "if" "(" statement ")" statement
                 ("else" statement)? ;
exprStmt       → expression ";" ;
printStmt      → "print" expression ";" ;
whileStmt      → "while" "(" expression ")" statement ;
block          → "{" declaration* "}" ;

expression     → assignment ;
assignment     → IDENTIFIER "=" assignment
               | logic_or ;
logic_or       → logic_and ( "or" logic_and )* ;
logic_and      → equality( "and" equality )* ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           → factor ( ( "-" | "+" ) factor )* ;
factor         → unary ( ( "/" | "*" ) unary )* ;
unary          → ( "!" | "-" ) unary
               | primary ;
primary        → NUMBER | STRING | "true" | "false" | "nil"
               | "(" expression ")" | IDENTIFIER ;



    Lox type        |    Java Representation
--------------------------------------------
    Any Lox Value   |    Object
    nil             |    null
    Boolean         |    Boolean
    number          |    Double
    string          |    String